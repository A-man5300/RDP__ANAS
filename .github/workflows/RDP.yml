name: Windows RDP Setup

on: [workflow_dispatch]

jobs:
  rdp-setup:
    runs-on: windows-latest
    timeout-minutes: 60  # Job timeout to prevent excessive billing
    steps:
    - name: Download and setup ngrok
      run: |
        # Download and extract ngrok
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath .
        
        # Authenticate ngrok (using GitHub secret)
        .\ngrok.exe authtoken $env:NGROK_TOKEN
        
        # Cleanup zip file
        Remove-Item ngrok.zip
      env:
        NGROK_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Configure RDP access
      run: |
        # Create secure password
        $Password = ConvertTo-SecureString -AsPlainText $env:RDP_PASSWORD -Force
        
        # Create user account
        New-LocalUser -Name "githubUser" `
                      -Password $Password `
                      -FullName "GitHub Runner" `
                      -Description "Temporary RDP user" | Out-Null
        
        # Add to administrators group
        Add-LocalGroupMember -Group "Administrators" -Member "githubUser"
        
        # Enable RDP service
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                         -Name 'fDenyTSConnections' `
                         -Value 0
        
        # Enable firewall rule
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      env:
        RDP_PASSWORD: ${{ secrets.RDP_PASSWORD }}

    - name: Start RDP tunnel
      run: |
        # Start ngrok in background
        Start-Process -NoNewWindow -FilePath ".\ngrok.exe" `
                      -ArgumentList "tcp 3389 --log stdout"
        
        # Get public tunnel URL
        $tunnel = (Invoke-WebRequest -Uri http://localhost:4040/api/tunnels -UseBasicParsing | ConvertFrom-Json).tunnels[0]
        $publicUrl = $tunnel.public_url -replace "tcp://", ""
        $hostPort = $publicUrl -split ":"
        
        # Output connection details
        echo "RDP_HOST=$($hostPort[0])" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        echo "RDP_PORT=$($hostPort[1])" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        
        # Display in job summary
        $summary = @"
        ### Remote Desktop Connection
        - **Address**: $($hostPort[0])
        - **Port**: $($hostPort[1])
        - **Username**: githubUser
        - **Password**: \*\*\*\*\*\*\*\* (use secret from repository)
        
        **Note**: 
        1. Connection available for ${{ job.timeout-minutes }} minutes
        2. Use mstsc.exe (Remote Desktop Connection)
        3. Tunnel will auto-terminate after job completion
        "@
        $summary | Out-File -FilePath $env:GITHUB_STEP_SUMMARY
      id: ngrok-tunnel

    - name: Maintain connection
      run: Start-Sleep -Seconds 3540  # 59 minutes (1 min less than job timeout)
